DROP TABLE IF EXISTS "user";

CREATE TABLE "user" (
                        "user_id" SERIAL PRIMARY KEY,
                        "mobile" VARCHAR(11) NOT NULL,
                        "password" VARCHAR(500) NOT NULL,
                        "name" VARCHAR(50) DEFAULT NULL,
                        "gender" INTEGER DEFAULT NULL,
                        "birth_year" INTEGER DEFAULT NULL,
                        "nickname" VARCHAR(100) DEFAULT NULL,
                        "email" VARCHAR(50) DEFAULT NULL,
                        "province" VARCHAR(50) DEFAULT NULL,
                        "city" VARCHAR(50) DEFAULT NULL,
                        "edu_degree" VARCHAR(50) DEFAULT NULL,
                        "graduation" VARCHAR(100) DEFAULT NULL,
                        "gra_year" INTEGER DEFAULT NULL,
                        "major" VARCHAR(50) DEFAULT NULL,
                        "dir_desire" INTEGER DEFAULT NULL,
                        "role" VARCHAR(50) DEFAULT NULL,
                        UNIQUE ("mobile")
);

DROP TABLE IF EXISTS "resume"
CREATE TABLE resume (
                        resume_id SERIAL PRIMARY KEY,
                        ability VARCHAR(255),
                        internship VARCHAR(255),
                        work_experience VARCHAR(255),
                        certificate VARCHAR(255),
                        job_desire VARCHAR(255),
                        user_id INT NOT NULL
);

-- Table: company
CREATE TABLE company (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    industry VARCHAR(255)
);

-- Table: job
CREATE TABLE job (
    id SERIAL PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    location VARCHAR(255),
    salary NUMERIC(15, 2),
    company_id INT REFERENCES company(id) ON DELETE SET NULL,
    timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    posted_by VARCHAR(255),
    job_status VARCHAR(50)
);

-- Table: notification
CREATE TABLE notification (
    notification_id SERIAL PRIMARY KEY,
    activity_type VARCHAR(255) NOT NULL,
    job_description TEXT,
    user_email VARCHAR(255) NOT NULL,
    timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Table: job_application
CREATE TABLE job_application (
    id SERIAL PRIMARY KEY,
    user_id INT NOT NULL REFERENCES "user"(user_id) ON DELETE CASCADE,
    job_id INT REFERENCES job(id) ON DELETE CASCADE,
    date_applied TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    resume_path VARCHAR(500) NOT NULL
);
